const pd = require('./paralleldots');
const path = require('path');

// Be sure to set your API key
pd.apiKey = "MePMWH4c198xGk6oSqA3byv8BGx2VOIiOSK9zovETHA";

// Calls to the API return promises

pd.usage()
	.then((response) => {
		console.log(response)
		if(JSON.parse(response).paying){
			console.log('\x1b[32m%s\x1b[0m','Usage passed');
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Usage failed');
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Usage failed');
	})


// language parameter is optional, by default "en" is passed.

pd.sentiment('Team performed well overall.','en')
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Sentiment passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Sentiment failed')
		}
	}).catch((error) =>{
		console.log('\x1b[31m%s\x1b[0m','Sentiment failed');
	})

pd.abuse("I was not very impressed with the band's performance this year")
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Abuse passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Abuse failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Abuse failed');
	})

pd.semantic('Global warming set to exceed Paris agreement’s 1.5C limit by 2040s, according to draft UN report','There is a tipping point’: UN warns climate change goals laid out in Paris accord are almost out of reach')
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Semantic passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Semantic failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Semantic failed');
	})


pd.ner('When Michael Jordan was at the peak of his powers as an NBA superstar, his Chicago Bulls teams were mowing down the competition, winning six National Basketball Association titles and setting a record for wins in a season that was broken by the Golden State Warriors two seasons ago.')
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','NER passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','NER failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','NER failed');
	})


pd.emotion("I am trying to imagine you with a personality.","en")
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Emotion passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Emotion failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Emotion failed');
	})

pd.emotion("C'est un environnement très hostile, si vous choisissez de débattre ici, vous serez vicieusement attaqué par l'opposition.","fr")
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Emotion - french passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Emotion - french failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Emotion - french failed');
	})

pd.intent('How do I cancel my ticket from the app?')
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Intent passed')
		}
		else{
			console.log('Intent failed')
		}
	})
	.catch((error) => {
		console.log('Intent failed');
	})

pd.keywords('For the Yankees, it took a stunning comeback after being down 2-0 to the Indians in the American League Division Series. For the Astros, it took beating Chris Sale to top the Red Sox.')
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Keywords passed')
		}
		else{
			console.log('Keywords failed')
		}
	})
	.catch((error) => {
		console.log('Keywords failed');
	})

pd.multilangKeywords("C'est un environnement très hostile, si vous choisissez de débattre ici, vous serez vicieusement attaqué par l'opposition.","fr")
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','MultilangKeywords passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','MultilangKeywords failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','MultilangKeywords failed');
	})

pd.taxonomy('Deutsche Bank CEO sees far fewer than 4,000 Brexit-related moves: paper')
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Taxonomy passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Taxonomy failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Taxonomy failed');
	})

pd.multilingualSentiment('Barcelona es una ciudad hermosa','es')
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','MultilingualSentiment passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','MultilingualSentiment failed')
		}
	})
	.catch((err) =>{
		console.log('\x1b[31m%s\x1b[0m','MultilingualSentiment failed');
	})


const category = {
	"finance": [ 
			"markets", 
			"economy", 
			"shares" 
		], 
	"world politics": [ 
			"diplomacy", 
			"UN", 
			"war" 
		], 
	"india": [ 
			"congress", 
			"india", 
			"bjp" 
		] 
}

pd.customClassifier('Prime Minister Narendra Modi tweeted a link to the speech Human Resource Development Minister Smriti Irani made in the Lok Sabha during the debate on the ongoing JNU row and the suicide of Dalit scholar Rohith Vemula at the Hyderabad Central University.',category)
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Custom Classifier passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Custom Classifier failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Custom Classifier failed');
	})

pd.textParser('For the Yankees, it took a stunning comeback after being down 2-0 to the Indians in the American League Division Series. For the Astros, it took beating Chris Sale to top the Red Sox.')
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Text Parser passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Text Parser failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Text Parser failed');
	})

pd.phraseExtractor('For the Yankees, it took a stunning comeback after being down 2-0 to the Indians in the American League Division Series. For the Astros, it took beating Chris Sale to top the Red Sox.')
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Phrase Extractor passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Phrase Extractor failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Phrase Extractor failed');
	})

const file_path = path.join(__dirname,'image-file.jpg');

pd.popularity(file_path)
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Popularity passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Popularity failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Popularity failed');
	})

pd.nsfw(file_path)
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','NSFW passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','NSFW failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','NSFW failed');
	})

pd.facialEmotion(file_path)
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Facial Emotion passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Facial Emotion failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Facial Emotion failed');
	})

pd.objectRecognizer(file_path)
	.then((response) => {
		if(JSON.parse(response).code == 200){
			console.log('\x1b[32m%s\x1b[0m','Object Recognizer passed')
		}
		else{
			console.log('\x1b[31m%s\x1b[0m','Object Recognizer failed')
		}
	})
	.catch((error) => {
		console.log('\x1b[31m%s\x1b[0m','Object Recognizer failed');
	})